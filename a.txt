(() => {
  function t() {
    const t = new URLSearchParams(window.location.search);
    return { code: t.get("code") || "", name: t.get("name") || "" };
  }
  function n() {
    const { code: n, name: a } = t();
    if (n && a) {
      const t = document.getElementById("gcode"),
        o = document.getElementById("gname");
      t && o && (t.value = n, o.value = a, document.querySelector(".joinButton")?.click());
    }
  }
  async function a() {
    const t = document.getElementById("gcode"),
      n = document.getElementById("gname"),
      a = document.getElementById("numJoins"),
      o = document.getElementById("skinSelect");
    if (!t || !n || !a || !o) return;
    const c = t.value.trim(),
      d = n.value.trim(),
      s = parseInt(a.value, 10),
      i = o.value;
    if (!c || !d || isNaN(s) || s <= 0) return;
    const r = 10,
      l = 1e3;
    for (let t = 1; t <= s; t += r) {
      const n = [];
      for (let a = 0; a < r && t + a <= s; a++) n.push(u(c, `${d}${t + a}`, i));
      await Promise.all(n), t + r <= s && await new Promise(e => setTimeout(e, l));
    }
  }
  async function u(t, n, a) {
    try {
      const o = await fetch("join", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id: t, name: n })
        }),
        c = await o.json();
      if (!c.success) return void console.error(`Failed to join as ${n}: ${c.msg}`);
      const d = `multi-bot-${Date.now()}-${n}`,
        s = window.initializeApp({
          apiKey: "AIzaSyCA-cTOnX19f6LFnDVVsHXya3k6ByP_MnU",
          authDomain: "blooket-2020.firebaseapp.com",
          projectId: "blooket-2020",
          storageBucket: "blooket-2020.appspot.com",
          messagingSenderId: "741533559105",
          appId: "1:741533559105:web:b8cbb10e6123f2913519c0",
          measurementId: "G-S3H5NGN10Z",
          databaseURL: c.fbShardURL
        }, d),
        i = window.getAuth(s);
      await window.signInWithCustomToken(i, c.fbToken);
      const r = window.getDatabase(s);
      await window.set(window.ref(r, `${t}/c/${n}`), { b: a, rt: !0 }),
        console.log(`Bot ${n} connected successfully with skin ${a}`);
    } catch (t) {
      console.error(`Error connecting bot ${n}:`, t);
    }
  }
  const c = document.createElement("select");
  c.id = "skinSelect";
  c.style.cssText = "width:200px;height:30px;margin-bottom:10px;padding:5px;font-size:16px;";
  window.blooks.forEach(e => {
    const t = document.createElement("option");
    t.value = e;
    t.textContent = e;
    c.appendChild(t);
  });
  const d = document.createElement("div");
  d.style.margin = "10px 0";
  const s = document.createElement("input");
  s.id = "numJoins";
  s.placeholder = "Number of joins";
  s.type = "number";
  s.min = "1";
  s.style.cssText = "width:200px;height:30px;margin-bottom:10px;padding:5px;font-size:16px;";
  const i = document.createElement("button");
  i.textContent = "Join Multiple Times";
  i.style.cssText = "height:40px;width:200px;cursor:pointer;background-color:#fff;border:none;border-radius:5px;box-shadow:inset 0 -6px #0003,0 0 4px #00000026;font-size:16px;margin-left:5px;";
  i.onclick = a;
  d.appendChild(c);
  d.appendChild(s);
  d.appendChild(i);
  const r = document.getElementById("cc"),
    l = document.querySelector(".joinButton");
  r && l && r.insertBefore(d, l.nextSibling);
  n();
})();
